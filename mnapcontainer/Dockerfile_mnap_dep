##
# Dockerfile for MNAP
# MNAP code created by: Anticevic Lab, Yale University and Mind and Brain Lab, University of Ljubljana
# Maintainer of Dockerfile: Zailyn Tamayo, Yale University
##

##
# Tag: ztamayo/mnap_dep
# Dockerfile for dependencies needed to run MNAP suite
# Installs dependencies Python (+pkgs), R (+pkgs), octave (+pkgs), Workbench, FreeSurfer 5.3-HCP, palm, and Gradunwarp, FIX (removed), AFNI (removed)
##
##

## -- Dependency paths -- https://bitbucket.org/hidradev/mnaptools/wiki/Overview/Installation.md
#
# The MNAP Suite assumes a set default folder names for dependencies if undefined by user environment.
# These are defined relative to the ${TOOLS} folder which should be set as a global system variable.
#
# TOOLS                              --> The base folder for the dependency installation 
# │ 
# ├── mnaptools                       --> Env. Variable => MNAPREPO -- All MNAP Suite repositories (https://bitbucket.org/hidradev/mnaptools) 
# │ 
# ├── HCP                             --> Human Connectome Pipelines Folder (https://github.com/Washington-University/HCPpipelines) 
# │   ├── Pipelines-stable            --> Env. Variable => HCPPIPEDIR  Note: Only Human Connectome Pipelines Stable Branch is set by default 
# │   ├── Pipelines-<VERSION>         --> Point any other desired version point to HCPPIPEDIR 
# │   └── HCPpipelinesRunUtils        --> Env. Variable => HCPPIPERUNUTILS 
# │ 
# ├── fmriprep                        --> fMRIPrep Pipelines (https://github.com/poldracklab/fmriprep) 
# │   └── fmriprep-<VERSION>          --> Env. Variable => FMRIPREP 
# │ 
# ├── afni                            --> AFNI: Analysis of Functional NeuroImages (https://github.com/afni/afni) 
# │   └── afni-<VERSION>              --> Env. Variable => AFNIDIR 
# │ 
# ├── dcm2niix                        --> dcm2niix conversion tool (https://github.com/rordenlab/dcm2niix) 
# │   └── dcm2niix-<VERSION>          --> Env. Variable => DCMNII 
# │ 
# ├── dicm2nii                        --> dicm2nii conversion tool (https://github.com/xiangruili/dicm2nii) 
# │   └── dicm2nii-latest             --> Env. Variable => DICMNII 
# │ 
# ├── freesurfer                      --> FreeSurfer (http://ftp.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0-HCP/) 
# │   └── freesurfer-5.3-HCP          --> Env. Variable => FSDIR53HCP (v5.3-HCP version for HCP-compatible data) 
# │   └── freesurfer-<VERSION>        --> Env. Variable => FSDIRLATEST (v6.0 or later stable for all other data 
# │   └── FreeSurferScheduler         --> Env. Variable => FreeSurferSchedulerDIR 
# │ 
# ├── fsl                             --> FSL (v5.0.9 or above with GPU-enabled DWI tools; https://fsl.fmrib.ox.ac.uk/fsl/fslwiki) 
# │   └── fsl-<VERSION>               --> Env. Variable => FSLDIR 
# │   └── fix-<VERSION>               --> Env. Variable => FSL_FIXDIR -- ICA FIX (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FIX/UserGuide) 
# │ 
# ├── octave/octave-<VERSION>         --> octave v.4.4.1 or higher. If octave is installed system-wide then a symlink is created here 
# │   └── octave-<VERSION>            --> Env. Variable => octaveDIR 
# │   └── octavepkg                   --> Env. Variable => octavePKGDIR -- If octave packages need manual deployment then the installed packages go here 
# │   └── olib                        --> All MNAP octave libraries
# | 
# │ 
# ├── palm/palm-<VERSION>             --> palm: Permutation Analysis of Linear Models (https://github.com/andersonwinkler/palm) 
# │   └── palm-latest-o               --> Env. Variable => palmDIR (If using octave) 
# │   └── palm-latest-m               --> Env. Variable => palmDIR (If using Matlab) 
# │   └── palm-<VERSION>              --> Set any other version to palmDIR  
# │ 
# ├── pylib                           --> Env. Variable => PYLIBDIR      -- All MNAP python libraries and tools 
# │   ├── gradunwarp                  --> Env. Variable => GRADUNWARPDIR -- HCP version of gradunwarp (https://github.com/Washington-University/gradunwarp) 
# │   ├── nibabel                     --> Env. Variable => NIBABELDIR    -- NiBabel (http://nipy.org/nibabel/) 
# │   └── pydicom                     --> Env. Variable => PYDICOMDIR    -- pydicom (v1.1.0 or later; https://pydicom.github.io) 
# │ 
# └── workbench/workbench-<VERSION>   Connectome Workbench (v1.0 or above; https://www.humanconnectome.org/software/connectome-workbench) 
#     └── workbench-<VERSION>         Env. Variable = HCPWBDIR 
#
# These defaults can be redefined if the above paths are declared as global variables in the .bash_profile profile after loading the MNAP environment.
#
# ==> For full environment report run 'mnap environment'
#
## -----------------------------------------------------------------------------

# Load mnap_os
FROM ztamayo/mnap_os:latest 

# Set $TOOLS path
ENV PATH="/opt" \
    TOOLS="/opt" \
    PATH="/opt:$PATH" \
    PYLIBDIR="/opt/pylib" \
    PATH="/opt/pylib:$PATH" \
    NIBABELDIR="/opt/pylib/nibabel" \
    PATH="/opt/pylib/nibabel:$PATH" \
    PYDICOMDIR="/opt/pylib/pydicom" \
    PATH="/opt/pylib/pydicom:$PATH" \
    LD_LIBRARY_PATH="/usr/local/install/lib/octave/4.4.1/:$LD_LIBRARY_PATH" \
    PATH="/opt/dcm2niix/dcm2niix-latest/bin:$PATH"

# Run yum update
RUN yum clean all && \
# Install Python 2.7
    echo "Installing Python 2.7.14..." && \
    mkdir /tmp/Python-2.7.14 && \
    wget --progress=bar:force -O /tmp/Python-2.7.14.tgz https://www.python.org/ftp/python/2.7.14/Python-2.7.14.tgz && \
    tar -xzvf /tmp/Python-2.7.14.tgz -C /tmp/Python-2.7.14 --strip-components 1 && \
    cd /tmp/Python-2.7.14 && \
    ./configure --prefix=/usr/local --enable-optimizations --enable-unicode=ucs4 --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib" && \
    make -j$(nproc) && make altinstall && \
    alias python="python2.7" && \
    echo "alias python='python2.7'" >> ~/.bashrc && \
    echo "Installing pip for Python 2.7..." && \
    cd /usr/local/bin && \
    wget --progress=bar:force -O /usr/local/bin/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
    python /usr/local/bin/get-pip.py && \
    alias pip="pip2.7" && \
    echo "alias pip='pip2.7'" >> ~/.bashrc && \
# Install Python packages
    echo "Installing Python packages..." && \
    pip install numpy pydicom scipy nibabel futures && \
# Install R
    echo "Installing R..." && \
    yum install -y R && \
    pip install rpy2==2.8.6 && \
# Install R package
    echo "Installing R packages..." && \
    echo "r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);" > ~/.Rprofile && \
    Rscript -e "install.packages('ggplot2')"

# Install Octave 4.4.1
RUN echo "Installing Octave 4.4.1..." && \
    export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk && \
    mkdir -p /opt/octave/octave-4.4.1/bin && \
    cd /opt/octave/octave-4.4.1/bin && \
    git clone https://github.com/ztamayo/octave-enable64.git && \
    cd octave-enable64 && \
    scl enable devtoolset-3 -- make -j$(nproc) && \
#    alias octave="/usr/local/bin/octave --no-init-file" && \
#    echo "alias octave='/usr/local/bin/octave --no-init-file'" >> ~/.bashrc && \
# Install octave packages
    echo "Installing octave packages..." && \
    export LD_LIBRARY_PATH=/usr/local/install/lib/octave/4.4.1/:LD_LIBRARY_PATH && \
    export LIBRARY_PATH=/usr/local/install/lib/octave/4.4.1/:LIBRARY_PATH && \
    ln -s /usr/local/install/lib/octave/4.4.1/liboctave.so /usr/lib64/ && \
    ln -s /usr/local/install/lib/octave/4.4.1/liboctinterp.so /usr/lib64/ && \
    octave --no-gui --eval "pkg install -verbose -forge general" && \
    octave --no-gui --eval "pkg install -verbose -forge control" && \
    octave --no-gui --eval "pkg install -verbose -forge image" && \
    octave --no-gui --eval "pkg install -verbose -forge nan" && \
    octave --no-gui --eval "pkg install -verbose -forge signal" && \
    octave --no-gui --eval "pkg install -verbose -forge io" && \
    octave --no-gui --eval "pkg install -verbose -forge statistics" && \
    octave --no-gui --eval "pkg install -verbose -forge miscellaneous" && \
    octave --no-gui --eval "pkg install -verbose -forge struct" && \
    octave --no-gui --eval "pkg install -verbose -forge optim" && \                                  
# Clear yum cache and other empty folders
    yum clean all && \
    rm -rf /var/lib/yum/lists/* /var/cache/yum/ /tmp/* /var/tmp/* /boot /media /mnt /srv && \
    rm -rf ~/.cache/pip

# Install dcm2niix
RUN echo "Downloading dcm2niix..." && \
    mkdir -p /tmp/dcm2niix && \
    wget --progress=bar:force -O /tmp/dcm2niix.tar.gz https://github.com/rordenlab/dcm2niix/archive/v1.0.20170624.tar.gz && \
    tar -xzvf /tmp/dcm2niix.tar.gz -C /tmp/ --strip-components 1 && \
    cd /tmp && \
    cmake -DUSE_OPENJPEG=ON . && \
    mkdir -p /opt/dcm2niix/dcm2niix-latest && \
    make -j$(nproc) && \
    mv bin/ /opt/dcm2niix/dcm2niix-latest && \
    cd / && \
    rm -rf /tmp/* && \
# Install FSL 5.0.9
    echo "Downloading FSL 5.0.9..." && \
    mkdir -p /opt/fsl/fsl-5.0.9 && \
    wget --progress=bar:force -O /tmp/fsl-5.0.9-centos6_64.tar.gz https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.9-centos6_64.tar.gz && \
    tar -xzvf /tmp/fsl-5.0.9-centos6_64.tar.gz -C /opt/fsl/fsl-5.0.9 --strip-components 1 && \
    rm /tmp/fsl-5.0.9-centos6_64.tar.gz && \
    rm -R /opt/fsl/fsl-5.0.9/data/first/ && \
    ln -sf /opt/fsl/fsl-5.0.9/ /opt/fsl/fsl-latest && \
    export FSLDIR=/opt/fsl/fsl-latest && \
# Install FSL 6.0.0
    echo "Downloading FSL 6.0.0..." && \
    mkdir -p /opt/fsl/fsl-6.0.0 && \
    wget --progress=bar:force -O /tmp/fsl-6.0.0-centos7_64.tar.gz https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.0-sources.tar.gz && \
    tar -xzvf /tmp/fsl-6.0.0-centos7_64.tar.gz -C /opt/fsl/fsl-6.0.0 --strip-components 1 && \
    cd /opt/fsl/fsl-6.0.0 && \
    ./build && \
    rm /tmp/fsl-6.0.0-centos7_64.tar.gz && \
    rm -Rf /opt/fsl/fsl-6.0.0/data/first/ 
#    export FSLDIR=/opt/fsl/fsl-6.0.0
#    . ${FSLDIR}/etc/fslconf/fsl.sh && \
#    $FSLDIR/etc/fslconf/post_install.sh -f $FSLDIR && \

# Install FreeSurfer 6.0
RUN echo "Downloading FreeSurfer 6.0..." && \
    yum clean all && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    mkdir -p /opt/freesurfer/freesurfer-6.0 && \
    wget --progress=bar:force -O /tmp/recon-all-freesurfer6-3.min.tgz https://dl.dropbox.com/s/nnzcfttc41qvt31/recon-all-freesurfer6-3.min.tgz && \ 
    tar -xzvf /tmp/recon-all-freesurfer6-3.min.tgz -C /opt/freesurfer/freesurfer-6.0 --strip-components 1 && \
    rm /tmp/recon-all-freesurfer6-3.min.tgz && \
    rm -R /opt/freesurfer/freesurfer-6.0/trctrain && \
# Install FreeSurfer 5.3-HCP
    echo "Downloading FreeSurfer-5.3-HCP..." && \
    mkdir -p /opt/freesurfer/freesurfer-5.3-HCP/ && \
    wget --progress=bar:force -O /tmp/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz ftp://ftp.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0-HCP/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz && \
    tar -xzvf /tmp/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz -C /opt/freesurfer/freesurfer-5.3-HCP/ --strip-components 1 && \
    rm /tmp/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz && \
    rm -R /opt/freesurfer/freesurfer-5.3-HCP/trctrain && \
    export FREESURFER_HOME="/opt/freesurfer/freesurfer-5.3-HCP"

# Install PALM
RUN echo "Installing PALM..." && \
    mkdir -p /opt/palm && \
    wget --progress=bar:force -O /tmp/palm-alpha112.tar.gz https://s3-us-west-2.amazonaws.com/andersonwinkler/palm/palm-alpha112.tar.gz && \
    tar -xzvf /tmp/palm-alpha112.tar.gz -C /opt/palm && \
    rm /tmp/palm-alpha112.tar.gz && \
    cd /opt/palm && \
    mv palm-alpha112/ palm-latest-o/ && \
    cd /opt/palm/palm-latest-o/fileio/@file_array/private && \
    ./compile.sh && \
    mv file2mat.m x-file2mat.m && \
    mv init.m x-init.m && \
    cd /opt/palm/palm-latest-o/fileio/@gifti/private && \
    ./compile.sh && \
    mv zstream.m x-zstream.m && \
    cd /opt/palm/palm-latest-o/fileio/@nifti/private && \
    mkoctfile --mex nifti_stats.c nifti_stats_mex.c -O && \
    mv nifti_stats.m x_nifti_stats.m && \
    cd /opt/palm/palm-latest-o/fileio/@xmltree/private && \
    cp /opt/palm/palm-latest-o/fileio/@file_array/private/compile.sh . && \
    cp /opt/palm/palm-latest-o/fileio/@file_array/private/Makefile.var . && \
    sed -e 's|^include ../../src/Makefile.var|include Makefile.var|' < Makefile > /tmp/Makefile && mv /tmp/Makefile Makefile && \
    ./compile.sh && \
    mv xml_findstr.m x-xml_findstr.m && \
    export PALMDIR="/opt/palm/palm-latest-o" && \
# Git clone Gradunwarp
    mkdir -p /opt/pylib && \
    cd /opt/pylib && \
    echo "Downloading Gradunwarp..." && \
    git clone https://github.com/Washington-University/gradunwarp.git && \
    cd /opt/pylib/gradunwarp/ && \
# Install Gradunwarp
    echo "Installing Gradunwarp..." && \
    python setup.py install && \
# Download nibabel
    echo "Downloading nibabel..." && \
    wget --progress=bar:force -O /tmp/nibabel-1.2.0.dev.tar.gz https://github.com/downloads/ksubramz/gradunwarp/nibabel-1.2.0.dev.tar.gz && \
    tar -xzvf /tmp/nibabel-1.2.0.dev.tar.gz -C /opt/pylib && \
    rm /tmp/nibabel-1.2.0.dev.tar.gz && \
    cd /opt/pylib/nibabel-1.2.0.dev/ && \
# Install nibabel
    echo "Installing nibabel..." && \
    python setup.py install

# Install Workbench
    echo "Downloading workbench..." && \
    mkdir -p /opt/workbench && \
    wget --progress=bar:force -O /tmp/workbench-rh_linux64.zip https://ftp.humanconnectome.org/workbench/workbench-rh_linux64-v1.3.2.zip && \
    unzip /tmp/workbench-rh_linux64.zip -d /opt/workbench && \
    rm /tmp/workbench-rh_linux64.zip && \
    cd /opt/workbench && \
    mv workbench/ workbench-1.3.2/ && \
    ln -sf /opt/workbench/workbench-1.3.2/ /opt/workbench/workbench-latest && \ 
    cd /opt/workbench/workbench-1.3.2/libs_rh_linux64 &&  \
    ln -s /usr/lib64/libz.so.1 && \
    export WORKBENCHDIR="/opt/workbench/workbench-latest" && \
    cd / && \
# Install CUDA
    wget --progress=bar:force -O /tmp/cuda-repo-rhel7-7.5-18.x86_64.rpm http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-repo-rhel7-7.5-18.x86_64.rpm && \
    rpm -i /tmp/cuda-repo-rhel7-7.5-18.x86_64.rpm && \
    yum clean all expire-cache &&\
    yum -y update mesa-libGL && \
    yum install -y cuda-7.5 && \
# Clear yum cache and other empty folders
    yum clean all && \
    rm -rf /var/lib/yum/lists/* /var/cache/yum/ /tmp/* /var/tmp/* /boot /media /mnt /srv && \
    rm -rf ~/.cache/pip

# Create Octave Sym Links
# Link Octave install to /usr/bin
RUN ln -sf /usr/local/bin/octave /usr/bin/octave && \
    ln -sf /usr/local/bin/octave-config-4.4.1 /usr/bin/octave-config && \
    ln -sf /usr/local/bin/octave-cli-4.4.1 /usr/bin/octave-cli && \
    ln -sf /usr/local/bin/mkoctfile-4.4.1 /usr/bin/mkoctfile && \
# Link Octave install to /opt/octave/octave-4.4.1/bin
    mkdir -p /opt/octave/octave-latest/bin && \
    ln -sf /usr/local/bin/octave /opt/octave/octave-4.4.1/bin && \
    ln -sf /usr/local/bin/octave /opt/octave/octave-latest/bin && \
    ln -sf /usr/local/bin/octave-config-4.4.1 /opt/octave/octave-4.4.1/bin && \
    ln -sf /usr/local/bin/octave-cli-4.4.1 /opt/octave/octave-4.4.1/bin && \
    ln -sf /usr/local/bin/mkoctfile-4.4.1 /opt/octave/octave-4.4.1/bin && \
    ln -sf /usr/local/bin/octave-config-4.4.1 /opt/octave/octave-latest/bin && \
    ln -sf /usr/local/bin/octave-cli-4.4.1 /opt/octave/octave-latest/bin && \
    ln -sf /usr/local/bin/mkoctfile-4.4.1 /opt/octave/octave-latest/bin && \
# Create directory in $TOOLS for octave packages and libraries and add sym links
    mkdir -p /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/general-2.1.0 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/control-3.1.0 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/image-2.10.0 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/nan-3.1.4 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/signal-1.4.0 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/io-2.4.12 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/statistics-1.4.0 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/miscellaneous-1.2.1 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/struct-1.0.15 /opt/octave/octavepkg && \
    ln -sf /usr/local/share/octave/packages/optim-1.5.3 /opt/octave/octavepkg && \
    mkdir -p /opt/octave/olib && \
    ln -sf /bin/epstool /opt/octave/olib && \
    ln -sf /bin/fig2dev /opt/octave/olib && \
    ln -sf /bin/pstoedit /opt/octave/olib && \
    ln -sf /usr/bin/hdf5 /opt/octave/olib && \
# Set up Python Sym Links
    ln -sf /usr/local/bin/python2.7 /opt/python && \
    mkdir -p /opt/pylib/lib/python2.7 && \
    mkdir -p /opt/pylib/lib64/python2.7 && \
    ln -sf /usr/lib/python2.7/site-packages /opt/pylib/lib/python2.7 && \
    ln -sf /usr/lib64/python2.7/site-packages /opt/pylib/lib64/python2.7 && \
    ln -sf /usr/lib/python2.7/site-packages/pydicom /opt/pylib/pydicom && \
    ln -sf /usr/lib/python2.7/site-packages/nibabel /opt/pylib/nibabel && \
# Set Octave links
    cd /opt/octave/octave-4.4.1/bin && \
    ln -sf octave-config-4.4.1 octave-config && \
    ln -sf octave-cli-4.4.1 octave-cli && \
    ln -sf mkoctfile-4.4.1 mkoctfile && \
    cd /opt/octave/octave-latest/bin && \
    ln -sf octave-config-4.4.1 octave-config && \
    ln -sf octave-cli-4.4.1 octave-cli && \
    ln -sf mkoctfile-4.4.1 mkoctfile && \
# Set R Sym Link
    mkdir -p /opt/R && \
    ln -sf /usr/bin/R /opt/R && \
    cd /opt/R && \
    mv R R-latest && \
    cd /opt

WORKDIR /opt

CMD ["bash"]


# Install FIX
#RUN wget --progress=bar:force -O /tmp/fix.tar.gz http://www.fmrib.ox.ac.uk/~steve/ftp/fix.tar.gz && \
#    tar -xzvf /tmp/fix.tar.gz -C /opt/fix/fix-latest && \
#    rm /tmp/fix.tar.gz

# Install AFNI
#ENV PATH="/opt/afni-latest:$PATH" \
#    AFNI_PLUGINPATH="/opt/afni-latest"
#RUN apt-get update -qq && \
#    apt-get install -y -q --no-install-recommends \
#           ed \
#           gsl-bin \
#           netpbm \
#           xfonts-base \
#           xvfb && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
#    curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb && \
#    dpkg -i /tmp/toinstall.deb && \
#    rm /tmp/toinstall.deb && \
#    curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb && \
#    dpkg -i /tmp/toinstall.deb && \
#    rm /tmp/toinstall.deb && \
#    apt-get install -f && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
#    gsl2_path="$(find / -name 'libgsl.so.19' || printf '')" && \
#    if [ -n "$gsl2_path" ]; then && \
#         ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0"; && \
#    fi && \
#    ldconfig && \
#    echo "Downloading AFNI..." && \
#    mkdir -p /opt/afni-latest && \
#    wget --progress=bar:force -O /tmp/linux_openmp_64.tgz https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz 
#RUN tar -xzvf /tmp/linux_openmp_64.tgz -C /opt/afni-latest --strip-components 1 && \
#    rm /tmp/linux_openmp_64.tgz
