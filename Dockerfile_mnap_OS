##
# CentOS 7 Dockerfile for MNAP
# MNAP code created by: Anticevic Lab, Yale University and Mind and Brain Lab, University of Ljubljana
# Maintainer of Dockerfile: Zailyn Tamayo, Yale University
##

##
# Tag: ztamayo/mnap_os:latest
# Base OS Dockerfile with ContOS deployed needed to run MNAP suite and dependencies
##

##
# Build:
# docker build -t ztamayo/mnap_os:latest .
##

##
# Create:
# docker container run -it --name mnap_os ztamayo/mnap_os
##

##
# Connect with bash
# docker exec -it mnap_os bash
##

# Pull base image
FROM centos:latest

# Update CentOS 7
RUN yum update -y && yum upgrade -y && \
# Install packages
    yum install -y yum-utils \
                   bzip2 \
                   ca-certificates \
                   curl \
                   locales \
                   unzip \
                   cmake \
                   g++ \
                   gcc \
                   git \
                   make \
                   pigz \
                   wget \
                   vim \
                   bc \
                   dc \
                   file \
                   perl \
                   tcsh \
                   wget \
                   pkg-config \
                   tmux \
                   centos-release-scl-rh \
# Install shared libraries  
                   netcdf \             
                   zlib-devel \
                   zlib1g-dev \
                   libfontconfig1 \
                   libfreetype6 \
                   libgl1-mesa-dev \
                   libglu1-mesa-dev \
                   libgomp1 \
                   libice6 \
                   libxcursor1 \
                   libxft2 \
                   libxinerama1 \
                   libxrandr2 \
                   libxrender1 \
                   libxt6 \
                   libc6 \
                   libftgl2 \
                   libgcc1 \
                   libgl1-mesa-glx \
                   libgl1 \
                   libglu1-mesa \
                   libglu1 \
                   libosmesa6 \
                   libqt4-network \
                   libqt4-opengl \
                   libqt4-xml \
                   libqtcore4 \
                   libstdc++6 \
                   zlib1g \
                   libqtgui4 \
                   libqtwebkit4 \
                   libxmu6 \
                   libxm4  \
                   libglw1-mesa \
                   libglib2.0-0 \
                   libjpeg62 \
                   libssl1.0.0 \
                   libssl-dev && \
# Install EPEL Repository
    yum install -y epel-release && \
# Install devtoolset-6-gcc rpm package
    yum install --enablerepo=centos-sclo-rh-testing install devtoolset-6-gcc && \
# Clean cache and other empty folders
    yum clean all && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /boot /media /mnt /srv && \
    rm -rf ~/.cache/pip && \
    chmod 777 /opt && chmod a+s /opt

# Install perlbrew and perl-5.16.3
RUN wget -O - https://install.perlbrew.pl | bash && \
    echo "source ~/perl5/perlbrew/etc/bashrc" >> ~/.bashrc

ENV PATH="/root/perl5/perlbrew/bin:$PATH"
ENV PATH="~/perl5/perlbrew:$PATH"
ENV PATH="~/perl5/perlbrew/bin/perlbrew:$PATH"
ENV PATH="~/perl5/perlbrew/etc/bashrc:$PATH"
ENV PERLBREW_PERL="perl-5.16.3"

RUN perlbrew --notest install perl-5.16.3 -n --switch && \
    perlbrew clean && \
    perlbrew switch perl-5.16.3

CMD ["bash"]

#      && wget --progress=bar:force -O /tmp/gcc-6-base_6.4.0-17ubuntu1_amd64.deb http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-6/gcc-6-base_6.4.0-17ubuntu1_amd64.deb \
#      && dpkg -i /tmp/gcc-6-base_6.4.0-17ubuntu1_amd64.deb \
#      && rm /tmp/gcc-6-base_6.4.0-17ubuntu1_amd64.deb \
#      && wget --progress=bar:force -O /tmp/libgfortran3_6.4.0-17ubuntu1_amd64.deb http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-6/libgfortran3_6.4.0-17ubuntu1_amd64.deb \
#      && dpkg -i /tmp/libgfortran3_6.4.0-17ubuntu1_amd64.deb \
#      && rm /tmp/libgfortran3_6.4.0-17ubuntu1_amd64.deb \
#      && wget --progress=bar:force -O /tmp/libhdf5-serial-1.8.4_1.8.4-patch1-3ubuntu2_amd64.deb http://security.ubuntu.com/ubuntu/pool/universe/h/hdf5/libhdf5-serial-1.8.4_1.8.4-patch1-3ubuntu2_amd64.deb \
#      && dpkg -i /tmp/libhdf5-serial-1.8.4_1.8.4-patch1-3ubuntu2_amd64.deb \
#      && rm /tmp/libhdf5-serial-1.8.4_1.8.4-patch1-3ubuntu2_amd64.deb \
#      && wget --progress=bar:force -O /tmp/libnetcdf6_4.1.1-6_amd64.deb http://security.ubuntu.com/ubuntu/pool/universe/n/netcdf/libnetcdf6_4.1.1-6_amd64.deb \
#      && dpkg -i /tmp/libnetcdf6_4.1.1-6_amd64.deb \
#      && rm /tmp/libnetcdf6_4.1.1-6_amd64.deb \

# Set the environment variables
# ENV HOME /root

# Working directory
# WORKDIR /root