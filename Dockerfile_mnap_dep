##
# Dockerfile for MNAP
# MNAP code created by: Anticevic Lab, Yale University and Mind and Brain Lab, University of Ljubljana
# Maintainer of Dockerfile: Zailyn Tamayo, Yale University
##

##
# Tag: ztamayo/mnap_dep
# Dockerfile for dependencies needed to run MNAP suite
# Installs dependencies Python (+pkgs), R (+pkgs), Octave (+pkgs), Workbench, FreeSurfer 5.3-HCP, PALM, and Gradunwarp, FIX (removed), AFNI (removed)
##
##

## -- Dependency paths -- https://bitbucket.org/hidradev/mnaptools/wiki/Overview/Installation.md
#
## -----------------------------------------------------------------------------
#
#  $TOOLS                           # -- the base folder for the installation
#  ├── afni                         # Env. Variable = $AFNIDIR            # -- AFNI: Analysis of Functional NeuroImages (https://github.com/afni/afni)
#  ├── dcm2niix                     # Env. Variable = $DCM2NIIDIR         # -- dcm2niix (https://github.com/rordenlab/dcm2niix)
#  ├── fix                          # Env. Variable = $FIXICAFolder       # -- FIX ICA (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FIX/UserGuide)
#  ├── freesurfer-5.3-HCP           # Env. Variable = $FSDIR53HCP         # -- FreeSurfer (v5.3-HCP version for HCP-compatible data; http://ftp.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0-HCP/)
#  ├── freesurfer-<LATEST_VERSION>  # Env. Variable = $FSDIRLATEST        # -- FreeSurfer (v6.0 or later stable for all other data; https://surfer.nmr.mgh.harvard.edu/fswiki/DownloadAndInstall)
#  ├── fsl-<VERSION>                # Env. Variable = $FSLFolder          # -- FSL (v5.0.9 or above with GPU-enabled DWI tools; https://fsl.fmrib.ox.ac.uk/fsl/fslwiki)
#  ├── mnaptools                    # Env. Variable = $MNAPREPO           # -- All MNAP Suite repositories (https://bitbucket.org/hidradev/mnaptools)
#  ├── octave                       # Env. Variable = $OCTAVEDIR          # -- Octave v.4.2.1 or higher. If Octave is installed system-wide then a symlink is created here
#  ├── octavepkg                    # Env. Variable = $OCTAVEPKGDIR       # -- If Octave packages need manual deployment then the installed packages go here
#  ├── PALM/palm-<VERSION>          # Env. Variable = $PALMDIR            # -- PALM: Permutation Analysis of Linear Models (https://github.com/andersonwinkler/PALM)
#  ├── pylib                        # Env. Variable = $PYLIBDIR           # -- All python libraries and tools
#  │   ├── gradunwarp               # Env. Variable = $GRADUNWARPDIR      # -- HCP version of gradunwarp (https://github.com/Washington-University/gradunwarp)         
#  │   ├── nibabel                  # Env. Variable = $NIBABELDIR         # -- NiBabel (http://nipy.org/nibabel/)
#  │   └── pydicom                  # Env. Variable = $PYDICOMDIR         # -- pydicom (v1.1.0 or later; https://pydicom.github.io) 
#  └── workbench                    # Env. Variable = $HCPWBDIR           # -- Connectome Workbench (v1.0 or above; https://www.humanconnectome.org/software/connectome-workbench)
#
## -----------------------------------------------------------------------------

# Load mnap_os
FROM ztamayo/mnap_os:latest 

# Set $TOOLS path
ENV PATH="/opt" \
    TOOLS="/opt" \
    PATH="/opt:$PATH" \
    PYLIBDIR="/opt/pylib" \
    PATH="/opt/pylib:$PATH" \
    NIBABELDIR="/opt/pylib/nibabel" \
    PATH="/opt/pylib/nibabel:$PATH" \
    PYDICOMDIR="/opt/pylib/pydicom" \
    PATH="/opt/pylib/pydicom:$PATH"

# Run yum update
RUN yum update -y  && \
    yum clean all && \
# Install Python 2.7
    echo "Installing Python 2.7.14..." && \
    mkdir /tmp/Python-2.7.14 && \
    wget --progress=bar:force -O /tmp/Python-2.7.14.tgz https://www.python.org/ftp/python/2.7.14/Python-2.7.14.tgz && \
    tar -xzvf /tmp/Python-2.7.14.tgz -C /tmp/Python-2.7.14 --strip-components 1 && \
    cd /tmp/Python-2.7.14 && \
    ./configure --prefix=/usr/local --enable-optimizations --enable-unicode=ucs4 --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib" && \
    make && make altinstall && \
    alias python="python2.7" && \
    echo "alias python='python2.7'" >> ~/.bashrc && \
    echo "Installing pip for Python 2.7..." && \
    cd /usr/local/bin && \
    wget --progress=bar:force -O /usr/local/bin/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
    python /usr/local/bin/get-pip.py && \
    alias pip="pip2.7" && \
    echo "alias pip='pip2.7'" >> ~/.bashrc && \
# Install Python packages
    echo "Installing Python packages..." && \
    pip install numpy pydicom scipy nibabel && \
# Install R
    echo "Installing R..." && \
    yum install -y R
                
# Install R package
RUN echo "Installing R packages..." && \
    wget --progress=bar:force -O /tmp/digest_0.6.15.tar.gz https://cran.r-project.org/src/contrib/digest_0.6.15.tar.gz && \
    R CMD INSTALL /tmp/digest_0.6.15.tar.gz && \
    wget --progress=bar:force -O /tmp/gtable_0.2.0.tar.gz https://cran.r-project.org/src/contrib/gtable_0.2.0.tar.gz && \
    R CMD INSTALL /tmp/gtable_0.2.0.tar.gz && \
    wget --progress=bar:force -O /tmp/lazyeval_0.2.1.tar.gz https://cran.r-project.org/src/contrib/lazyeval_0.2.1.tar.gz && \
    R CMD INSTALL /tmp/lazyeval_0.2.1.tar.gz && \
    wget --progress=bar:force -O /tmp/Rcpp_0.12.18.tar.gz https://cran.r-project.org/src/contrib/Rcpp_0.12.18.tar.gz && \
    R CMD INSTALL /tmp/Rcpp_0.12.18.tar.gz && \
    wget --progress=bar:force -O /tmp/plyr_1.8.4.tar.gz https://cran.r-project.org/src/contrib/plyr_1.8.4.tar.gz && \
    R CMD INSTALL /tmp/plyr_1.8.4.tar.gz && \
    wget --progress=bar:force -O /tmp/glue_1.3.0.tar.gz https://cran.r-project.org/src/contrib/glue_1.3.0.tar.gz && \
    R CMD INSTALL /tmp/glue_1.3.0.tar.gz && \
    wget --progress=bar:force -O /tmp/magrittr_1.5.tar.gz https://cran.r-project.org/src/contrib/magrittr_1.5.tar.gz && \
    R CMD INSTALL /tmp/magrittr_1.5.tar.gz && \
    wget --progress=bar:force -O /tmp/stringi_1.2.4.tar.gz https://cran.r-project.org/src/contrib/stringi_1.2.4.tar.gz && \
    R CMD INSTALL /tmp/stringi_1.2.4.tar.gz && \
    wget --progress=bar:force -O /tmp/stringr_1.3.1.tar.gz https://cran.r-project.org/src/contrib/stringr_1.3.1.tar.gz && \
    R CMD INSTALL /tmp/stringr_1.3.1.tar.gz && \
    wget --progress=bar:force -O /tmp/reshape2_1.4.3.tar.gz https://cran.r-project.org/src/contrib/reshape2_1.4.3.tar.gz && \
    R CMD INSTALL /tmp/reshape2_1.4.3.tar.gz && \
    wget --progress=bar:force -O /tmp/rlang_0.2.1.tar.gz https://cran.r-project.org/src/contrib/rlang_0.2.1.tar.gz && \
    R CMD INSTALL /tmp/rlang_0.2.1.tar.gz && \
    wget --progress=bar:force -O /tmp/viridisLite_0.3.0.tar.gz https://cran.r-project.org/src/contrib/viridisLite_0.3.0.tar.gz && \
    R CMD INSTALL /tmp/viridisLite_0.3.0.tar.gz && \
    wget --progress=bar:force -O /tmp/RColorBrewer_1.1-2.tar.gz https://cran.r-project.org/src/contrib/RColorBrewer_1.1-2.tar.gz && \
    R CMD INSTALL /tmp/RColorBrewer_1.1-2.tar.gz && \
    wget --progress=bar:force -O /tmp/R6_2.2.2.tar.gz https://cran.r-project.org/src/contrib/R6_2.2.2.tar.gz && \
    R CMD INSTALL /tmp/R6_2.2.2.tar.gz && \
    wget --progress=bar:force -O /tmp/labeling_0.3.tar.gz https://cran.r-project.org/src/contrib/labeling_0.3.tar.gz && \
    R CMD INSTALL /tmp/labeling_0.3.tar.gz && \
    wget --progress=bar:force -O /tmp/colorspace_1.3-2.tar.gz https://cran.r-project.org/src/contrib/colorspace_1.3-2.tar.gz && \
    R CMD INSTALL /tmp/colorspace_1.3-2.tar.gz && \
    wget --progress=bar:force -O /tmp/munsell_0.5.0.tar.gz https://cran.r-project.org/src/contrib/munsell_0.5.0.tar.gz && \
    R CMD INSTALL /tmp/munsell_0.5.0.tar.gz && \
    wget --progress=bar:force -O /tmp/dichromat_2.0-0.tar.gz https://cran.r-project.org/src/contrib/dichromat_2.0-0.tar.gz && \
    R CMD INSTALL /tmp/dichromat_2.0-0.tar.gz && \
    wget --progress=bar:force -O /tmp/scales_0.5.0.tar.gz https://cran.r-project.org/src/contrib/scales_0.5.0.tar.gz && \
    R CMD INSTALL /tmp/scales_0.5.0.tar.gz && \
    wget --progress=bar:force -O /tmp/crayon_1.3.4.tar.gz https://cran.r-project.org/src/contrib/crayon_1.3.4.tar.gz && \
    R CMD INSTALL /tmp/crayon_1.3.4.tar.gz && \
    wget --progress=bar:force -O /tmp/praise_1.0.0.tar.gz https://cran.r-project.org/src/contrib/praise_1.0.0.tar.gz && \
    R CMD INSTALL /tmp/praise_1.0.0.tar.gz && \
    wget --progress=bar:force -O /tmp/assertthat_0.2.0.tar.gz https://cran.r-project.org/src/contrib/assertthat_0.2.0.tar.gz && \
    R CMD INSTALL /tmp/assertthat_0.2.0.tar.gz && \
    wget --progress=bar:force -O /tmp/cli_1.0.0.tar.gz https://cran.r-project.org/src/contrib/cli_1.0.0.tar.gz && \
    R CMD INSTALL /tmp/cli_1.0.0.tar.gz && \
    wget --progress=bar:force -O /tmp/fansi_0.2.3.tar.gz https://cran.r-project.org/src/contrib/fansi_0.2.3.tar.gz && \
    R CMD INSTALL /tmp/fansi_0.2.3.tar.gz && \
    wget --progress=bar:force -O /tmp/utf8_1.1.4.tar.gz https://cran.r-project.org/src/contrib/utf8_1.1.4.tar.gz && \
    R CMD INSTALL /tmp/utf8_1.1.4.tar.gz && \
    wget --progress=bar:force -O /tmp/pillar_1.3.0.tar.gz https://cran.r-project.org/src/contrib/pillar_1.3.0.tar.gz && \
    R CMD INSTALL /tmp/pillar_1.3.0.tar.gz && \
    wget --progress=bar:force -O /tmp/tibble_1.4.2.tar.gz https://cran.r-project.org/src/contrib/tibble_1.4.2.tar.gz && \
    R CMD INSTALL /tmp/tibble_1.4.2.tar.gz && \
    wget --progress=bar:force -O /tmp/withr_2.1.2.tar.gz https://cran.r-project.org/src/contrib/withr_2.1.2.tar.gz && \
    R CMD INSTALL /tmp/withr_2.1.2.tar.gz && \
    wget --progress=bar:force -O /tmp/testthat_2.0.0.tar.gz https://cran.r-project.org/src/contrib/testthat_2.0.0.tar.gz && \
    R CMD INSTALL /tmp/testthat_2.0.0.tar.gz && \
    wget --progress=bar:force -O /tmp/ggplot2_3.0.0.tar.gz https://cran.r-project.org/src/contrib/ggplot2_3.0.0.tar.gz && \
    R CMD INSTALL /tmp/ggplot2_3.0.0.tar.gz
# Install Octave 4.2.1
RUN mkdir -p /tmp/octave-4.2.1 && \
    wget --progress=bar:force -O /tmp/octave-4.2.1.tar.gz ftp://ftp.gnu.org/gnu/octave/octave-4.2.1.tar.gz && \
    tar -xzvf /tmp/octave-4.2.1.tar.gz -C /tmp/octave-4.2.1 --strip-components 1 && \
    cd /tmp/octave-4.2.1 && \
    export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk && \
    ./configure --prefix=/usr/local --with-qt=5 && \
    make -j4 && \
    make check && \
    make install && \
    alias octave="/usr/local/bin/octave" && \
    echo "alias octave='/usr/local/bin/octave'" >> ~/.bashrc && \
# Install Octave packages
    echo "Installing Octave packages..." && \
    octave --no-gui --eval "pkg install -verbose -forge -auto general" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto control" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto image" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto nan" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto signal" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto io" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto statistics" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto miscellaneous" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto struct" && \
    octave --no-gui --eval "pkg install -verbose -forge -auto optim" && \                                  
# Clear yum cache and other empty folders
    yum clean all && \
    rm -rf /var/lib/yum/lists/* /var/cache/yum/ /tmp/* /var/tmp/* /boot /media /mnt /srv && \
    rm -rf ~/.cache/pip
    
# Set dcm2niix path
ENV PATH="/opt/dcm2niix/bin:$PATH" 

# Install dcm2niix
RUN echo "Downloading dcm2niix..." && \
    mkdir -p /tmp/dcm2niix && \
    wget --progress=bar:force -O /tmp/dcm2niix.tar.gz https://github.com/rordenlab/dcm2niix/archive/v1.0.20170624.tar.gz && \
    tar -xzvf /tmp/dcm2niix.tar.gz -C /tmp/ --strip-components 1 && \
    cd /tmp && \
    cmake -DUSE_OPENJPEG=ON . && \
    mkdir -p /opt/dcm2niix && \
    make && \
    mv bin/ /opt/dcm2niix && \
    cd / && \
    rm -rf /tmp/* && \
# Install FSL
    echo "Downloading FSL 5.0.9..." && \
    mkdir -p /opt/fsl-5.0.9 && \
    wget --progress=bar:force -O /tmp/fsl-5.0.9-centos6_64.tar.gz https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.9-centos6_64.tar.gz && \
    tar -xzvf /tmp/fsl-5.0.9-centos6_64.tar.gz -C /opt/fsl-5.0.9 --strip-components 1 && \
    rm /tmp/fsl-5.0.9-centos6_64.tar.gz && \
    rm -R /opt/fsl-5.0.9/data/first/

# Install FreeSurfer 6.0
RUN echo "Downloading FreeSurfer 6.0..." && \
    yum update -y && \
    yum clean all && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    mkdir -p /opt/freesurfer-6.0 && \
    wget --progress=bar:force -O /tmp/recon-all-freesurfer6-3.min.tgz https://dl.dropbox.com/s/nnzcfttc41qvt31/recon-all-freesurfer6-3.min.tgz && \ 
    tar -xzvf /tmp/recon-all-freesurfer6-3.min.tgz -C /opt/freesurfer-6.0 --strip-components 1 && \
    rm /tmp/recon-all-freesurfer6-3.min.tgz && \
    rm -R /opt/freesurfer-6.0/trctrain && \
# Install FreeSurfer 5.3-HCP
    echo "Downloading FreeSurfer-5.3-HCP..." && \
    mkdir -p /opt/freesurfer-5.3-HCP/ && \
    wget --progress=bar:force -O /tmp/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz ftp://ftp.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0-HCP/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz && \
    tar -xzvf /tmp/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz -C /opt/freesurfer-5.3-HCP/ --strip-components 1 && \
    rm /tmp/freesurfer-Linux-centos6_x86_64-stable-pub-v5.3.0-HCP.tar.gz && \
    rm -R /opt/freesurfer-5.3-HCP/trctrain
# Install PALM
RUN echo "Installing PALM..." && \
    wget --progress=bar:force -O /tmp/palm-alpha111.tar.gz https://s3-us-west-2.amazonaws.com/andersonwinkler/palm/palm-alpha111.tar.gz && \
    tar -xzvf /tmp/palm-alpha111.tar.gz -C /opt && \
    rm /tmp/palm-alpha111.tar.gz && \
# Git clone Gradunwarp
    mkdir -p /opt/pylib && \
    cd /opt/pylib && \
    echo "Downloading Gradunwarp..." && \
    git clone https://github.com/Washington-University/gradunwarp.git

WORKDIR /opt/pylib/gradunwarp/

# Install Gradunwarp
RUN echo "Installing Gradunwarp..." && \
    python setup.py install && \
# Download nibabel
    echo "Downloading nibabel..." && \
    wget --progress=bar:force -O /tmp/nibabel-1.2.0.dev.tar.gz https://github.com/downloads/ksubramz/gradunwarp/nibabel-1.2.0.dev.tar.gz && \
    tar -xzvf /tmp/nibabel-1.2.0.dev.tar.gz -C /opt/pylib && \
    rm /tmp/nibabel-1.2.0.dev.tar.gz 

WORKDIR /opt/pylib/nibabel-1.2.0.dev/

# Install nibabel
RUN echo "Installing nibabel..." && \
    python setup.py install && \
# Install Workbench
    echo "Downloading workbench..." && \
    wget --progress=bar:force -O /tmp/workbench-rh_linux64.zip https://ftp.humanconnectome.org/workbench/workbench-rh_linux64-v1.3.1.zip && \
    unzip /tmp/workbench-rh_linux64.zip -d /opt/ && \
    rm /tmp/workbench-rh_linux64.zip && \
    cd /opt/workbench/libs_rh_linux64 &&  \
    ln -s /usr/lib64/libz.so.1 && \
    cd / && \
# Clear yum cache and other empty folders
    yum update -y && \
    yum clean all && \
    rm -rf /var/lib/yum/lists/* /var/cache/yum/ /tmp/* /var/tmp/* /boot /media /mnt /srv && \
    rm -rf ~/.cache/pip

# Create Octave Sym Links
RUN ln -fs /usr/local/bin/octave-4.2.1 /usr/bin/octave && \
    mkdir -p /opt/Octave/4.2.1 && \
    ln -fs /usr/local/bin/octave-4.2.1 /opt/Octave/4.2.1 && \
    ln -fs /usr/local/bin/octave-config-4.2.1 /usr/bin/octave-config && \
    ln -fs /usr/local/bin/octave-cli-4.2.1 /usr/bin/octave-cli && \
    ln -fs /usr/local/bin/mkoctfile-4.2.1 /usr/bin/mkoctfile && \
    mkdir -p /opt/octavepkg && \
    ln -fs /usr/local/share/octave/packages /opt/octavepkg && \
# Set up Python Sym Links
    ln -fs /usr/local/bin/python2.7 /opt/python && \
    mkdir -p /opt/pylib/lib/python2.7 && \
    mkdir -p /opt/pylib/lib64/python2.7 && \
    ln -fs /usr/lib/python2.7/site-packages /opt/pylib/lib/python2.7 && \
    ln -fs /usr/lib64/python2.7/site-packages /opt/pylib/lib64/python2.7 && \
    ln -fs /usr/lib/python2.7/site-packages/pydicom /opt/pylib/pydicom && \
    ln -fs /usr/lib/python2.7/site-packages/nibabel /opt/pylib/nibabel

CMD ["bash"]


# Install FIX
#RUN wget --progress=bar:force -O /tmp/fix.tar.gz http://www.fmrib.ox.ac.uk/~steve/ftp/fix.tar.gz && \
#    tar -xzvf /tmp/fix.tar.gz -C /opt && \
#    rm /tmp/fix.tar.gz

# Install AFNI
#ENV PATH="/opt/afni-latest:$PATH" \
#    AFNI_PLUGINPATH="/opt/afni-latest"
#RUN apt-get update -qq && \
#    apt-get install -y -q --no-install-recommends \
#           ed \
#           gsl-bin \
#           netpbm \
#           xfonts-base \
#           xvfb && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
#    curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb && \
#    dpkg -i /tmp/toinstall.deb && \
#    rm /tmp/toinstall.deb && \
#    curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb && \
#    dpkg -i /tmp/toinstall.deb && \
#    rm /tmp/toinstall.deb && \
#    apt-get install -f && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
#    gsl2_path="$(find / -name 'libgsl.so.19' || printf '')" && \
#    if [ -n "$gsl2_path" ]; then && \
#         ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0"; && \
#    fi && \
#    ldconfig && \
#    echo "Downloading AFNI..." && \
#    mkdir -p /opt/afni-latest && \
#    wget --progress=bar:force -O /tmp/linux_openmp_64.tgz https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz 
#RUN tar -xzvf /tmp/linux_openmp_64.tgz -C /opt/afni-latest --strip-components 1 && \
#    rm /tmp/linux_openmp_64.tgz
